{
  "name": "fcm-node",
  "version": "1.0.15",
  "description": "A Node.JS simple interface to Google's Firebase Cloud Messaging (FCM). Supports both android and iOS, including topic messages, and parallel calls",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Saber-Tecnologias/fcm-node.git"
  },
  "keywords": [
    "fcm",
    "gcm",
    "push",
    "notification",
    "push notification",
    "firebase",
    "firebase cloud messaging",
    "google",
    "android",
    "ios",
    "topic message",
    "parallel send"
  ],
  "author": {
    "name": "Saber Tecnologias Educacionais e Sociais - Leonardo Pereira",
    "email": "jlcvp@cin.ufpe.br",
    "url": "www.sabertecnologias.com.br"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Saber-Tecnologias/fcm-node/issues"
  },
  "homepage": "https://github.com/Saber-Tecnologias/fcm-node",
  "dependencies": {
    "retry": "^0.9.0"
  },
  "tonicExampleFilename": "example.js",
  "readme": "fcm-node [![NPM version](https://badge.fury.io/js/fcm-node.svg)](http://badge.fury.io/js/fcm-node)\n========\nA Node.JS simple interface to Google's Firebase Cloud Messaging (FCM). Supports both android and iOS, including topic messages, and parallel calls.\n## Installation\n\nVia [npm][1]:\n\n    $ npm install fcm-node\n\n## Usage\n\n    var FCM = require('fcm-node');\n\n    var serverKey = '';\n    var fcm = new FCM(serverKey);\n\n    var message = { //this may vary according to the message type (single recipient, multicast, topic, et cetera)\n        to: 'registration_token', \n        collapse_key: 'your_collapse_key',\n        \n        notification: {\n            title: 'Title of your push notification', \n            body: 'Body of your push notification' \n        },\n        \n        data: {  //you can send only notification or only data(or include both)\n            my_key: 'my value',\n            my_another_key: 'my another value'\n        }\n    };\n    \n    fcm.send(message, function(err, response){\n        if (err) {\n            console.log(\"Something has gone wrong!\");\n        } else {\n            console.log(\"Successfully sent with response: \", response);\n        }\n    });\n\n\n## Notes\n* See [FCM documentation][2] for general details.\n* See [Firebase Cloud Messaging HTTP Protocol][10] for details about the HTTP syntax used and JSON fields, notification and data objects. **(STRONGLY RECOMMENDED)**\n* On **iOS**, set **content_available** when the app server needs to send a Send-to-Sync message. An inactive client app executes your logic in the background, while an app in the foreground passes the message to **didReceiveRemoteNotification**. (As seen in [FCM Docs][8])\n* Some **iOS** users report a delay receiving the notifications and even a **'not receive at all'** scenario if the **priority** field is not set. This is due to a delivery policy with **APN** ([See APNs Provider API for a more detailed info][9])   \n\n## Credits\n\nExtended by [Leonardo Pereira][3].\nBased on the great work on [fcm-push][7] by [Rasmunandar Rustam][4] cloned and modified from there, which in its turn, was cloned and modified from [Changshin Lee][5]'s [node-gcm][5]\n\n## License\n\n[MIT][6]\n\n[1]: http://github.com/isaacs/npm\n[2]: https://firebase.google.com/docs/cloud-messaging/server\n[3]: mailto:jlcvp@cin.ufpe.br\n[4]: mailto:nandar.rustam@gmail.com\n[5]: https://github.com/h2soft/node-gcm\n[6]: https://opensource.org/licenses/MIT\n[7]: https://github.com/nandarustam/fcm-push\n[8]: https://firebase.google.com/docs/cloud-messaging/concept-options\n[9]: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/APNsProviderAPI.html#//apple_ref/doc/uid/TP40008194-CH101-SW2\n[10]: https://firebase.google.com/docs/cloud-messaging/http-server-ref\n\n## Changelog\n1.0.14 - Added example file to quick tests <br />\n1.0.13 - Added a error response in case of TopicsMessageRateExceeded response <br />\n1.0.12 - Refactored the client removing the Event Emitter's Logic to fix concurrency issues. Using pure callbacks now also avoids memory leak in specific scenarios with lots of parallel calls to <b>send</b> function. <br />\n1.0.11 - \\<FIX\\> send function returning error objects when multicast messages (or individually targeted) returned both error and success keys on response message (even with error counter = 0 ) <br /> \n1.0.9 - Updated Documentation <br />\n1.0.8 - \\<FIX\\> 'icon' field no longer required in notification<br /> \n1.0.7 - renaming repository<br />\n1.0.6 - bugfix: send function was always returning an error object for multicast messages (multiple registration ids)<br />\n1.0.5 - bugfix with UTF-8 enconding and chunk-encoded transfers<br />\n1.0.1 - forked from fcm-push and extended to accept topic messages without errors<br />\n",
  "readmeFilename": "README.md",
  "_id": "fcm-node@1.0.15",
  "dist": {
    "shasum": "88b7486c6e8180623ce89dbe307548c9b07d9f37"
  },
  "_from": "fcm-node@",
  "_resolved": "https://registry.npmjs.org/fcm-node/-/fcm-node-1.0.15.tgz"
}
